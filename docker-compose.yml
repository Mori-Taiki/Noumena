version: '3.8'
services:
  frontend:
    build:
      context: .
      dockerfile: .devcontainer/frontend.Dockerfile
    working_dir: /workspace/workspaces/frontend
    command: npm run dev
    volumes:
      - .:/workspace:cached
      - /workspace/workspaces/frontend/node_modules
    environment:
      - NEXT_PUBLIC_BACKEND_API_URL=${NEXT_PUBLIC_BACKEND_API_URL}
      - NODE_ENV=development
    ports:
      - "3000:3000"
    networks:
      - noumena_net

  backend:
    build:
      context: .
      dockerfile: .devcontainer/backend.Dockerfile
    working_dir: /workspace/workspaces/backend
    command: dotnet run
    volumes:
      - .:/workspace:cached
    environment:
      - NEO4J_URI=${NEO4J_URI}
      - NEO4J_USER=${NEO4J_USER}
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - AZURE_STORAGE_QUEUE_CONNECTION_STRING=${AZURE_STORAGE_QUEUE_CONNECTION_STRING}
      - AZUREADB2C_INSTANCE=${AZUREADB2C_INSTANCE}
      - AZUREADB2C_CLIENTID=${AZUREADB2C_CLIENTID}
      - AZUREADB2C_DOMAIN=${AZUREADB2C_DOMAIN}
      - AZUREADB2C_SIGNUPSIGNINPOLICYID=${AZUREADB2C_SIGNUPSIGNINPOLICYID}
      - ASPNETCORE_URLS=http://+:5001
    depends_on:
      - database
    ports:
      - "0:5001" # Use dynamic port allocation
    networks:
      - noumena_net

  database:
    image: neo4j:5
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password1234
    networks:
      - noumena_net

volumes:
  neo4j_data:

networks:
  noumena_net: